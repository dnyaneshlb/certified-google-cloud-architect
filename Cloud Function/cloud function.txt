Serverless, event based, small single purpose processing 

billed nearest 100ms

can be written only in python, nodejs, java, .Net, Ruby, php and go.

Two types
	HTTP Function
		Functions that are triggered by HTTP requests are called HTTP functions.
	Event driven functions	
		Functions that are triggered by event in GCP ecosystem are called even driven functions
		Background Function
			Functions that are triggered by event are called background functions
			for example, by a message being published to a Pub/Sub topic, a change in a Cloud Storage bucket, or a Firebase event.
		CloudEvent Function
			conceptually similar to background functions
			CloudEvent functions use an industry-standard event format known as CloudEvents
			Another such difference is that Cloud Functions itself invokes CloudEvent functions using HTTP requests
			This isn't supported by many popular languages yet.
			https://cloud.google.com/functions/docs/writing/cloudevents
			
	
Triggers
	Cloud functions can be triggered by many things
		http call
		Cloud storage
		Cloud pub/sub
		Cloud Firestore
		Cloud Logging
		Firebase


gcloud
	gcloud functions deploy myfunction
		--runtime python37 		
		--trigger-event=providers/cloud.firestore/eventTypes/document.write
		--allow-unauthenticated
		--memory=512MB
		--timeout=60

	gcloud functions call helloWorld  --data='{"message": "Hello World!"}'	
	
	gcloud functions logs read myfunction
		--limit=20
		--min-log-level=DEBUG


Supprted Events and triggers
	https://cloud.google.com/functions/docs/concepts/events-triggers
	HTTP : call by http requests
	Cloud storage : finalize, delete, archieve, metadataUpdate
	Firstore : create, delete, update, write
	pubsub : topic.publish
	CLoud Logging : forward log entries to a Pub/Sub topic by creating a sink. You can then trigger the function
	firebase



Important Considertion for choosing CF
	By default, a function times out after 1 minute, but you can extend this period up to 9 minutes.
	
	Each instance of a function handles only one concurrent request at a time. This means that while your code is processing one request, there is no possibility of a second request being routed to the same instance. So if you have requests thousands then there are chances then you have many(not exactly 1000 instances cause it depends on GCP how many instances to use) instances are created and so the billing.
	
	To avoid the aftermath of sudden traffic spikes you can set min and max instances of CF.

	The code executed after sending the HTTP response could be interrupted at any time, and CpU can throttle

	To avoid cold start, set a min instances.
	To enable back pressure, set max instances. 

	

Cloud function configuration
	Be sure to use min and max instances - based on your requirements
	
	Now CF supports secret manager to securely store API keys, passwords, and other sensitive information
	https://cloud.google.com/functions/docs/configuring/secrets
	This is good step towards centralised security for sensitive information.
	
	Make sure you right ingress settings
		Allow all traffic - anyone can invoke/access CF
		Allow internal traffic only - 	internal traffic from connected VPCs 
		Allow internal and Cloud Load Balancing - internal traffic from connected VPCs + public Google Load Balancer
	
	Cloud Functions uses the "App Engine default service account" which has the editor role on project. Hence it should be used only for developement and testing purposes. When you go prod, you have to use custom service account with bare minimum IAM permissions required to perform the role - Principal of least previledge	
	
	
Pricing :
	?

	
Best Practices
	https://cloud.google.com/functions/docs/bestpractices/tips
		
		
		
Links : 
	https://cloud.google.com/functions/docs/concepts/overview
	